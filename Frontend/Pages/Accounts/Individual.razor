@page "/Individual/{email}"

@using Common.ApiResponseModels.PatientResponseModels;
@using Common.ApiRequestModels.PatientRequestModels;
@using Operations;

@inject HttpClient http;
@inject IConfiguration Configuration;
@inject NavigationManager NavigationManager;

<PageTitle>Swasthya - Individual</PageTitle>
<div>
    <div>
        @patient.Email
        @patient.SwasthyaId
    </div>
    <img src="@GenerateQrCodeImage("Hello, world!")" alt="QR code">
</div>


@code {
    private PatientResponseModel patient;
    private string baseUri;
    private string patientEmail;
    private string errorMessage;

    [Parameter]
    public string email { get; set; }

    protected override async Task OnInitializedAsync()
    {
        patient = new PatientResponseModel();
        this.baseUri = Configuration["BackendUri"];

        await GetPatient();
    }

    private string GenerateQrCodeImage(string text)
    {
        var qrc = new QRCodeGeneration();
        return qrc.GenerateQrCodeImage(text);
    }

    private async Task GetPatient()
    {
        var uriFormat = this.baseUri + @"/api/Patient/getPatient/{0}";
        var getPatientUri = string.Format(uriFormat, Uri.EscapeDataString(email));

        try
        {

                var response = await http.GetFromJsonAsync<PatientResponseModel>(getPatientUri);

                if (response != null)
                {
                    this.patient = response;
                }
                else
                {
                    errorMessage = "An error occurred. Please try again.";
                }

        }

        catch (Exception ex)
        {
            errorMessage = $"An error occurred : {ex.Message}";
        }
    }
}
