@page "/Individual/Medical-Practitioners/{email}"

@using Common.ApiResponseModels.PatientResponseModels;
@using Common.ApiRequestModels.PatientRequestModels;
@using Operations;

@inject HttpClient http;
@inject IConfiguration Configuration;
@inject NavigationManager NavigationManager;

<PageTitle>Swasthya - Individual Login</PageTitle>

<div class="wrapper-div">
    <div class="wrapper-div-upper">
        <h1 class="app-name">
            swasthya
        </h1>
    </div>
    <div class="profile-details">
        Profile Details
    </div>
</div>

@if (patient.Doctors == null)
{
    <div></div>
}

@code {
    private PatientResponseModel patient;
    private string baseUri;
    private string patientEmail;
    private string errorMessage;
    private string QRCode;
    private QRCodeGeneration qrCodeGeneration;

    [Parameter]
    public string email { get; set; }

    protected override async Task OnInitializedAsync()
    {
        patient = new PatientResponseModel();
        this.baseUri = Configuration["BackendUri"];
        await GetPatient();
    }

    private async Task GetPatient()
    {
        var uriFormat = this.baseUri + @"/api/Patient/getPatient/{0}";
        var getPatientUri = string.Format(uriFormat, Uri.EscapeDataString(email));

        try
        {

            var response = await http.GetFromJsonAsync<PatientResponseModel>(getPatientUri);

            if (response != null)
            {
                this.patient = response;
            }
            else
            {
                errorMessage = "An error occurred. Please try again.";
            }

        }

        catch (Exception ex)
        {
            errorMessage = $"An error occurred : {ex.Message}";
        }
    }
}